SELECT  id, concat((SELECT concat(last_name,' ',name) as name FROM users WHERE id = acc.user_id),' - ',name) as name, amount, is_enabled, user_id, created_at, updated_at FROM accounts as acc WHERE is_enabled = 1 AND user_id <> ".auth()->user()->id." ORDER BY user_id,name;

SELECT DISTINCT t.id, (SELECT name FROM accounts WHERE id = t.source_account) as source_account,(SELECT name FROM accounts WHERE id = t.target_account) as target_account,t.created_at,t.amount,(SELECT (SELECT id FROM users WHERE id = au.user_id) FROM accounts as au WHERE au.id = t.source_account) as source_id,(SELECT (SELECT id FROM users WHERE id = au.user_id) FROM accounts as au WHERE au.id = t.target_account) as target_id FROM  transactions as t LEFT JOIN accounts as a ON t.source_account = a.id OR t.target_account = a.id WHERE a.user_id = 1 ORDER BY t.created_at DESC;

SELECT DISTINCT t.id, (SELECT name FROM accounts WHERE id = t.source_account) as source_account,t.source_account as source_account_id,(SELECT name FROM accounts WHERE id = t.target_account) as target_account,t.target_account as target_account_id,t.created_at,t.amount,(SELECT (SELECT id FROM users WHERE id = au.user_id) FROM accounts as au WHERE au.id = t.source_account) as source_id,(SELECT (SELECT id FROM users WHERE id = au.user_id) FROM accounts as au WHERE au.id = t.target_account) as target_id FROM transactions as t LEFT JOIN accounts as a ON t.source_account = a.id OR t.target_account = a.id WHERE a.user_id = 2 ORDER BY t.created_at DESC;

create trigger tg_users_after_insert after insert on users for each row
insert into accounts (name,user_id,amount,created_at,updated_at) values ('MASTER',new.id,100000,now(),now())

DROP TRIGGER IF EXISTS tg_transactions_after_insert;
DELIMITER $$
CREATE TRIGGER tg_transactions_after_insert 
AFTER
ON transactions
FOR EACH ROW 
BEGIN
	UPDATE accounts SET amount = amount - new.amount WHERE id = new.source_account;
    UPDATE accounts SET amount = amount + new.amount WHERE id = new.target_account;
END;
DELIMITER $$